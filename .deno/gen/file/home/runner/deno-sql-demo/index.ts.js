import { DB } from "https://deno.land/x/sqlite/mod.ts";
import { serve } from "https://deno.land/std@0.74.0/http/server.ts";
import { Model } from "./model.ts";
import { View } from "./view.ts";
import { Controller } from "./controller.ts";
const db = new DB("demo.db");
const people = new Model(db, "people", [
    { field_name: "id", field_type: "INTEGER PRIMARY KEY AUTOINCREMENT" },
    { field_name: "email", field_type: "text" },
    { field_name: "message_text", field_type: "text" },
    { field_name: "time_created", field_type: "DATETIME DEFAULT CURRENT_TIMESTAMP" },
]);
people.create({ email: "kevinelong@gmail.com", message_text: "Greetings and Salutations!" });
people.create({ email: "dude@example.com", message_text: "Wassup!?" });
const view = new View("<h1>{ message_text }</h1>\n<b>{ email }</b> <i>{ time_created }</i>");
function index() {
    return `
  <a href="/messages/">
    Show Messages
  </a>
  `;
}
function show_messages() {
    const data = people.get();
    return data.map((r) => view.get(r)).join("\n\n");
}
const controller = new Controller({
    "/": index,
    "/messages/": show_messages,
});
const server = serve({ hostname: "0.0.0.0", port: 8000 });
console.log(`HTTP webserver running.  Access it at:  http://localhost:8080/`);
for await (const request of server) {
    console.log(request);
    const path = request.url;
    const text = (controller.get(path))();
    console.log(text);
    request.respond({ status: 200, body: text });
}
db.close();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDdkQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBRXBFLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbkMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFN0MsTUFBTSxFQUFFLEdBQUcsSUFBSSxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUM7QUFFN0IsTUFBTSxNQUFNLEdBQUksSUFBSSxLQUFLLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRTtJQUN0QyxFQUFDLFVBQVUsRUFBQyxJQUFJLEVBQUUsVUFBVSxFQUFDLG1DQUFtQyxFQUFDO0lBQ2pFLEVBQUMsVUFBVSxFQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUMsTUFBTSxFQUFDO0lBQ3ZDLEVBQUMsVUFBVSxFQUFDLGNBQWMsRUFBRSxVQUFVLEVBQUMsTUFBTSxFQUFDO0lBQzlDLEVBQUMsVUFBVSxFQUFDLGNBQWMsRUFBRSxVQUFVLEVBQUMsb0NBQW9DLEVBQUM7Q0FDN0UsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFDLEtBQUssRUFBQyxzQkFBc0IsRUFBRSxZQUFZLEVBQUMsNEJBQTRCLEVBQUMsQ0FBQyxDQUFDO0FBQ3pGLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBQyxLQUFLLEVBQUMsa0JBQWtCLEVBQUUsWUFBWSxFQUFDLFVBQVUsRUFBQyxDQUFDLENBQUM7QUFFbkUsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMscUVBQXFFLENBQUMsQ0FBQztBQUU3RixTQUFTLEtBQUs7SUFDWixPQUFPOzs7O0dBSU4sQ0FBQztBQUNKLENBQUM7QUFDRCxTQUFTLGFBQWE7SUFDcEIsTUFBTSxJQUFJLEdBQWMsTUFBTSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ3JDLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQVEsRUFBQyxFQUFFLENBQUEsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUN4RCxDQUFDO0FBRUQsTUFBTSxVQUFVLEdBQUcsSUFBSSxVQUFVLENBQUM7SUFDaEMsR0FBRyxFQUFHLEtBQUs7SUFDWCxZQUFZLEVBQUcsYUFBYTtDQUM3QixDQUFDLENBQUM7QUFJSCxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQzFELE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0VBQWdFLENBQUMsQ0FBQztBQUU5RSxJQUFJLEtBQUssRUFBRSxNQUFNLE9BQU8sSUFBSSxNQUFNLEVBQUU7SUFDcEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUVuQixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0lBQ3pCLE1BQU0sSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDdEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVsQixPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztDQUM5QztBQUdELEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyJ9